{
  "name": "File Organization Restore",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "restore-file",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-restore",
      "name": "Webhook - Restore File",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "restore-file-webhook"
    },
    {
      "parameters": {
        "operation": "select",
        "table": "file_backups",
        "where": "id = '{{ $json.backup_id }}' AND is_restored = FALSE",
        "options": {}
      },
      "id": "get-backup-record",
      "name": "Get Backup Record",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [460, 300],
      "credentials": {
        "postgres": {
          "id": "postgres-backup-db",
          "name": "Backup Database"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.length }}",
              "operation": "equal",
              "value2": 0
            }
          ]
        }
      },
      "id": "check-record-exists",
      "name": "Check Record Exists",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "command": "test -f \"{{ $json[0].new_path }}\""
      },
      "id": "check-file-exists",
      "name": "Check File Exists at New Location",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [900, 200]
    },
    {
      "parameters": {
        "command": "test ! -f \"{{ $json[0].original_path }}\""
      },
      "id": "check-original-free",
      "name": "Check Original Location Free",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [1120, 200]
    },
    {
      "parameters": {
        "command": "mv \"{{ $json[0].new_path }}\" \"{{ $json[0].original_path }}\""
      },
      "id": "move-file-back",
      "name": "Move File Back",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [1340, 200]
    },
    {
      "parameters": {
        "operation": "update",
        "table": "file_backups",
        "updateKey": "id",
        "columnToMatchOn": "id",
        "valueToMatchOn": "={{ $json[0].id }}",
        "fieldsUi": {
          "values": [
            {
              "column": "is_restored",
              "value": "TRUE"
            },
            {
              "column": "restored_at",
              "value": "={{ new Date().toISOString() }}"
            }
          ]
        }
      },
      "id": "mark-restored",
      "name": "Mark as Restored",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [1560, 200]
    },
    {
      "parameters": {
        "command": "rm -f \"{{ $json[0].backup_path }}\""
      },
      "id": "cleanup-backup",
      "name": "Cleanup Physical Backup",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [1780, 200],
      "continueOnFail": true
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": true, \"backup_id\": $json[0].id, \"file_name\": $json[0].file_name, \"restored_to\": $json[0].original_path, \"message\": \"File restored successfully\" } }}"
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2000, 200]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": false, \"error\": \"Backup record not found or already restored\" } }}",
        "options": {
          "responseCode": 404
        }
      },
      "id": "not-found-response",
      "name": "Not Found Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 400]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": false, \"error\": $json.error || \"Restore operation failed\" } }}",
        "options": {
          "responseCode": 500
        }
      },
      "id": "error-response",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [2000, 500]
    }
  ],
  "connections": {
    "Webhook - Restore File": {
      "main": [
        [
          {
            "node": "Get Backup Record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Backup Record": {
      "main": [
        [
          {
            "node": "Check Record Exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Record Exists": {
      "main": [
        [
          {
            "node": "Not Found Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check File Exists at New Location",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check File Exists at New Location": {
      "main": [
        [
          {
            "node": "Check Original Location Free",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Original Location Free": {
      "main": [
        [
          {
            "node": "Move File Back",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Move File Back": {
      "main": [
        [
          {
            "node": "Mark as Restored",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mark as Restored": {
      "main": [
        [
          {
            "node": "Cleanup Physical Backup",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cleanup Physical Backup": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "id": "file-restore-workflow"
} 