{
  "name": "List Backup Records",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "GET",
        "path": "backup-records",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-list",
      "name": "Webhook - List Backups",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "list-backups-webhook"
    },
    {
      "parameters": {
        "operation": "select",
        "table": "file_backups",
        "where": "is_restored = FALSE",
        "sort": "created_at DESC",
        "limit": "{{ $json.limit || 50 }}",
        "options": {}
      },
      "id": "get-backups",
      "name": "Get Backup Records",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [460, 300],
      "credentials": {
        "postgres": {
          "id": "postgres-backup-db",
          "name": "Backup Database"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Transform backup records to include time ago\nconst items = $input.all();\n\nconst timeAgo = (date) => {\n  const now = new Date();\n  const diffMs = now - new Date(date);\n  const diffMins = Math.floor(diffMs / 60000);\n  const diffHours = Math.floor(diffMs / 3600000);\n  const diffDays = Math.floor(diffMs / 86400000);\n  \n  if (diffMins < 1) return 'just now';\n  if (diffMins < 60) return `${diffMins} minute${diffMins > 1 ? 's' : ''} ago`;\n  if (diffHours < 24) return `${diffHours} hour${diffHours > 1 ? 's' : ''} ago`;\n  return `${diffDays} day${diffDays > 1 ? 's' : ''} ago`;\n};\n\nconst transformedItems = items.map(item => ({\n  ...item.json,\n  timeAgo: timeAgo(item.json.created_at),\n  canRestore: !item.json.is_restored\n}));\n\nreturn [{ json: { backups: transformedItems, count: transformedItems.length } }];"
      },
      "id": "transform-data",
      "name": "Transform Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 300]
    }
  ],
  "connections": {
    "Webhook - List Backups": {
      "main": [
        [
          {
            "node": "Get Backup Records",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Backup Records": {
      "main": [
        [
          {
            "node": "Transform Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transform Data": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "id": "list-backups-workflow"
} 